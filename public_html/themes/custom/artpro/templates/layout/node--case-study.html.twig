{#
/**
 * @file
 * Theme override to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 */
#}
{%
  set classes = [
    'node',
    'node--type-' ~ node.bundle|clean_class,
    node.isPromoted() ? 'node--promoted',
    node.isSticky() ? 'node--sticky',
    not node.isPublished() ? 'node--unpublished',
    view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
  ]
%}

{{ attach_library('classy/node') }}
<article{{ attributes.addClass(classes) }}>


{#
	<header class="content-header">
		<div class="wrapper">
			<h1 class="page-title">
		 		{{ node.getTitle() }}
			</h1>
			<h4>{{ content.field_subtitle }}</h4>
			
			{% if display_submitted %}
			<div class="author-information">
			<div{{ author_attributes.addClass('node__submitted') }}>
	 			{{ author_picture }}
		      
				<div class="author">
					<span class="label">Author</span><br>
					{{ node.Owner.field_name.value }}
				</div>
				
				
				
				<div class="date">
					<span class="label">Published</span><br>
					{{ node.getCreatedTime|format_date('short') }}
				</div>
				
				
				{{ metadata }}
			</div>
	    </div>
	  {% endif %}

	  </div>		
	</header>
#}
	{{ title_prefix }}
	{% if label and not page %}
	<h2{{ title_attributes }}>
		<a href="{{ url }}" rel="bookmark">{{ label }}</a>
	</h2>
	{% endif %}
	{{ title_suffix }}

	
	{{ content.field_feature_image }}
		{# style="background: url('{{ feature_image_url }}') no-repeat center center" #}
{#
		{% if content.field_feature_image.0 is not empty %}
		{% set feature_image_url = file_url(content.field_feature_image[0]['#media'].field_media_image.entity.uri.value) %}
		<header class="feature-content" >
 			{{ content.field_feature_image }}
 		
 			{% if (content.field_tag.0 is not empty) or (content.field_partner.0 is not empty) %}
 			<aside class="content-metadata">
 				<span class="container">
 					{{ content.field_tag }}
					{{ content.field_partner }}
 				</span>
			</aside>
			{% endif %}
			
			{% if content.field_feature_audio.0 is not empty %}
				{{ attach_library('artpro/featured-audio') }}

	  			{{ content.field_feature_audio }}
				
			{% endif %}
			
		</header>
		{% endif %}
#}
		

			
			



{#
      {% set image_alt = content.field_image[0]['#media'].field_media_image.alt %}
	
#}

  
{#  {{ content.field_hero }} #}
{#
	<section class="wrapper">
		<h2>{{ content.field_breakout.0 }}</h2>
		{{ content.field_intro.0 }}
	</section>
#}
  
	<section class="main wrapper {% if (content.field_tag.0 is not empty) or (content.field_partner.0 is not empty) %}with-sidebar{% endif %}" >
		{% if content.field_feature_audio.0 is not empty %}
			{{ attach_library('artpro/featured-audio') }}
			{{ content.field_feature_audio }}
		{% endif %}
		
		{{ content
	    |without('field_subtitle')
	    |without('field_breakout')
	    |without('field_intro')
	    |without('field_feature_image')
	    |without('field_feature_audio')
	    |without('field_challenge')
	    |without('field_approach')
	    |without('field_solution')
	    |without('field_tag')
	    |without('field_deliverables')
	    |without('field_partner')
	    |without('field_pullout')
	    |without('field_impact')
	    |without('field_address')
	    |without('field_body_old')
	     }}

		
		{% if (content.field_tag.0 is not empty) or (content.field_partner.0 is not empty) %}
		<aside class="right-sidebar">
			<section class="content-metadata">
 				{{ content.field_tag }}
				{{ content.field_partner }}
				{{ content.field_address }}
{#				{{ content.field_partner.0['#taxonomy_term'].name.value }}
				{% set taxonomy_term_name = content.field_partner.0['#taxonomy_term'].name.value %}
				{{ taxonomy_term_name }}
#}
				
			</section>
 		</aside>
		{% endif %}
			
	</section>
	
	{% if (content.field_challenge.0 is not empty) or (content.field_approach.0 is not empty) or (content.field_solution.0 is not empty) %}
	<section class="key-information">
		<section class="challenge-overview wrapper" {# data-aos="fade-up" #}>
			{% if content.field_challenge.0 is not empty %}<section class="challenge"><h2 class="h3">Challenge</h2>{{ content.field_challenge.0 }}</section>{% endif %}
			{% if content.field_approach.0 is not empty %}<section class="approach"><h2 class="h3">Approach</h2>{{ content.field_approach.0 }}</section>{% endif %}
			{% if content.field_solution.0 is not empty %}<section class="solution"><h2 class="h3">Solution</h2>{{ content.field_solution.0 }}</section>{% endif %}
		</section>
		<div class="mezzotint-break wrapper"></div>
		
		{% if content.field_impact.0 is not empty %}
		<section class="impact wrapper">
			{{ content.field_impact }}
		</section>
		{% endif %}
	</section>
	{% endif %}
	
	
	{% if content.field_pullout.0 is not empty %}
		{{ content.field_pullout }}
	{% endif %}
	
	{% if content.field_body_old.0 is not empty %}
		<section class="body_old wrapper">
			{{ content.field_body_old.0 }}
		</section>
	{% endif %}
	
{#   <section{{ content_attributes.addClass('node__content') }}>   #}
 {#   </div> #}
</article>
