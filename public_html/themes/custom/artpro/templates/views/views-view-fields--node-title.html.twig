{#
/**
 * @file
 * Default theme implementation to display a block.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 *
 * @ingroup themeable
 */
#}
{#
<div{{ attributes }}>
  {{ title_prefix }}
  {% if label %}
    <h2{{ title_attributes }}>{{ label }}</h2>
  {% endif %}
  {{ title_suffix }}
  {% block content %}
    {{ content }}
  {% endblock %}
  {{ fields.field_subtitle.content }}
</div>
#}




{#
Custom Node title template for showing title, subtitle or partner and content type on nodes
Visibility controlled through block settings and twig logic below.
#}


{# 	<header class="content-header" {% if fields.field_media_image.content is not empty %}style="background: url('{{ fields.field_media_image.content }}') center center;background-size:cover;"{% endif %}> #}
{# 		<div class="wrapper"> #}

			{# if this is not a basic page we tell the user what sort of content they are looking at #}
			{% if (fields.type.content is not empty) and (fields.type.content != 'Basic page') %}
				{% if (fields.type.content != 'Article') %}
				<a class="context-type" href="/projects">{{ fields.type.content }}s</a>
				{% else %}
				<a class="context-type" href="/news">{{ fields.type.content }}s</a>
				{% endif %}
			{% endif %}

			<div class="feature-image-blockout"></div>

			<h1 id="page-title" tabindex="-1">
				{{ fields.title.content }}
			</h1>

			{% if fields.field_media_audio_file.content is not empty %}
 				{{ attach_library('artpro/featured-audio') }}
				<article id="feature-audio">
					<button id="audio-toggle" onClick="togglePlay()" title="Play the featured audio for this page" aria-pressed="true/false">Listen Now</button>
					{{ fields.field_media_audio_file.content }}
				</article>
			{% endif %}

			{# if there's a subtitle referenced, use it #}
			{% if fields.field_subtitle.content and (fields.type.content != 'Article') %}
				<h2 class="page-subtitle">{{ fields.field_subtitle.content }}</h2>
				{# Otherwise we'll check for a partner reference (for case studies) and use that as the subtitle field #}
				{% elseif fields.field_partner.content %}
				<h2 class="page-subtitle">{{ fields.field_partner.content }}</h2>
			{% endif %}

			{# banner image field placed here and relocated with javascript #}
			{% if fields.field_media_image.content is not empty %}
				<div id="feature-image-url" class="hidden">{{ fields.field_media_image.content }}</div>
			{% endif %}

			{% if fields.field_link.content is not empty %}
				{{ fields.field_link.content }}
			{% endif %}


		{#
					{% if display_submitted %}
					<div class="author-information">
					<div{{ author_attributes.addClass('node__submitted') }}>
			 			{{ author_picture }}

						<div class="author">
							<span class="label">Author</span><br>
							{{ node.Owner.field_name.value }}
						</div>



						<div class="date">
							<span class="label">Published</span><br>
							{{ node.getCreatedTime|format_date('short') }}
						</div>


						{{ metadata }}
					</div>
			    </div>
			  {% endif %}
		#}


{# 	</div> #}
{# </header> #}
